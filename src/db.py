import oracledb

def create_schema(user, password, dsn):
    """
    Create banks and reviews tables in the connected Oracle database.
    """
    conn = oracledb.connect(user=user, password=password, dsn=dsn)
    cur = conn.cursor()

    # Create banks table
    cur.execute("""
        BEGIN
            EXECUTE IMMEDIATE 'CREATE TABLE banks (
                bank_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                bank_name VARCHAR2(100) UNIQUE NOT NULL
            )';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -955 THEN
                    RAISE;
                END IF;
        END;
    """)

    # Create reviews table
    cur.execute("""
        BEGIN
            EXECUTE IMMEDIATE 'CREATE TABLE reviews (
                review_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                bank_id NUMBER REFERENCES banks(bank_id),
                review CLOB,
                review_clean CLOB,
                textblob_sentiment VARCHAR2(20),
                textblob_polarity NUMBER,
                bert_sentiment VARCHAR2(20),
                bert_score NUMBER,
                vader_compound NUMBER,
                theme VARCHAR2(50)
            )';
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE != -955 THEN
                    RAISE;
                END IF;
        END;
    """)

    conn.commit()
    cur.close()
    conn.close()

def insert_reviews(df, user, password, dsn):
    """
    Insert reviews and banks into Oracle database.
    Assumes tables 'banks' and 'reviews' already exist.
    """
    conn = oracledb.connect(user=user, password=password, dsn=dsn)
    cur = conn.cursor()

    # Insert unique banks
    banks = df['bank'].unique()
    for bank in banks:
        try:
            cur.execute("INSERT INTO banks (bank_name) VALUES (:1)", (bank,))
        except oracledb.IntegrityError:
            pass  # Ignore duplicates

    # Insert reviews
    for _, row in df.iterrows():
        cur.execute("SELECT bank_id FROM banks WHERE bank_name = :1", (row['bank'],))
        bank_id = cur.fetchone()[0]
        cur.execute("""
            INSERT INTO reviews (
                bank_id, review_text
            ) VALUES (:1, :2)
        """, (
            bank_id,
            row['review']
        ))
    conn.commit()
    cur.close()
    conn.close()